/*
 * Copyright (c) Haulmont 2025. All Rights Reserved.
 * Use is subject to license terms.
 */

import com.github.spotbugs.snom.Confidence
import com.github.spotbugs.snom.Effort

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "io.jmix.gradle:jmix-gradle-plugin:2.4.1"
    }
}

plugins {
    id 'com.github.spotbugs' version '6.1.7' apply false
}

group = 'io.openbpm.ui'

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'io.jmix'

    if (project.hasProperty('spotbugsEnabled')) {
        apply plugin: "com.github.spotbugs"
    }

    repositories {
        mavenCentral()
        maven {
            url = 'https://nexus.openbpm.io/repository/public'
        }
        maven {
            url 'https://global.repo.jmix.io/repository/public'
        }
    }

    jmix {
        bomVersion = '2.4.1'
        projectId = 'openbpm-ui-kit'
    }

    group = this.group
    version = this.version

    def props = new Properties()
    buildFile.withInputStream { props.load(it) }
    def subArchivesBaseName = props.getProperty('archivesBaseName')
    def archName = subArchivesBaseName.substring(1, subArchivesBaseName.length() - 1)

    java {
        withSourcesJar()
        withJavadocJar()
    }

    artifacts {
        archives sourcesJar
    }

    publishing {
        if (rootProject.hasProperty('openbpmUploadUrl')) {
            repositories {
                maven {
                    url = rootProject['openbpmUploadUrl']
                    credentials {
                        username rootProject['openbpmUploadUser']
                        password rootProject['openbpmUploadPassword']
                    }
                    allowInsecureProtocol = true
                }
            }
        }

        publications {
            javaMaven(MavenPublication) {
                artifactId = archName
                from components.java
            }
        }
    }

    if (project.hasProperty('spotbugsEnabled')) {
        spotbugs {
            ignoreFailures = false
            omitVisitors = ['FindDoubleCheck']
            excludeFilter = project.file('../etc/spotbugs/spotbugs-exclude-filter.xml')
            effort = Effort.valueOf('MAX')
            reportLevel = Confidence.valueOf('MEDIUM')
        }

        spotbugsMain {
            jvmArgs = ['-Xmx1024m']

            reports {
                xml.enabled = false
                html {
                    enabled = true
                    stylesheet = 'fancy-hist.xsl'
                    destination layout.buildDirectory.file("reports/spotbugs/${project.name}.html").get().asFile
                }
            }
        }

        spotbugsTest {
            jvmArgs = ['-Xmx1024m']

            reports {
                xml.enabled = false
                html {
                    enabled = true
                    stylesheet = 'fancy-hist.xsl'
                    destination layout.buildDirectory.file("reports/spotbugs/test-${project.name}.html").get().asFile
                }
            }
        }
    }

    // remove after https://youtrack.jetbrains.com/issue/IDEA-227215 is fixed
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    tasks.withType(Javadoc) {
        options.addStringOption("sourcepath", "")
        options.encoding = 'UTF-8'
        options.memberLevel = JavadocMemberLevel.PROTECTED
    }

}
